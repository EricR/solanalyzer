package analyzers

import (
	"crypto/sha256"
	"fmt"
	"github.com/antlr/antlr4/runtime/Go/antlr"
)

// Issue contains output generated by an analyzer.
type Issue struct {
	Severity    int
	Title       string
	MsgFormat   string
	Message     string
	sourcePath  string
	sourceStart antlr.Token
	sourceStop  antlr.Token
	analyzer    Analyzer
}

const (
	// Informational severity
	SeverityInfo int = iota
	// Low severity
	SeverityLow
	// Medium severity
	SeverityMed
	// High severity
	SeverityHigh
)

func (i *Issue) ID() string {
	id := fmt.Sprintf("%s:%s:%s", i.AnalyzerID(), i.Source(), i.Message)

	return fmt.Sprintf("%x", sha256.Sum256([]byte(id)))
}

func (i *Issue) AnalyzerID() string {
	return i.analyzer.ID()
}

func (i *Issue) Source() string {
	if i.sourceStart == nil || i.sourceStop == nil {
		return fmt.Sprintf("%s:1:1", i.sourcePath)
	} else {
		return fmt.Sprintf("%s:%d:%d",
			i.sourcePath, i.sourceStart.GetLine(), i.sourceStop.GetColumn())
	}
}
